<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.capstone.snowe.mapper.ReservationMapper">

    <!-- ================================= -->
    <!-- 1. 캘린더에서 날짜를 선택 -->
    <!-- 2. 맘에 드는 강사의 강습을 선택 후 예약하기-->
    <!-- ================================= -->
    <insert id="DateLessonReservation">
        INSERT INTO RESERVATION(RESERVE_ID,
                                TEACHER_ID,
                                STUDENT_ID,
                                LESSON_ID,
                                RESERVE_DATE)
        SELECT
            'RSV' || LPAD(RESERVE_SEQ.NEXTVAL, 8, 0) AS RESERVE_ID,
            T.ID AS TEACHER_ID,
            'jwb1796' AS STUDENT_ID,
            L.LESSON_ID AS LESSON_ID,
            TO_DATE(SYSDATE) AS RESERVE_DATE
        FROM                                                                        -- #{LOGIN_ID}
                                                                                    LESSON L
                                                                                        INNER JOIN TEACHER T
                                                                                                   ON L.LOGIN_ID = T.ID
        WHERE
            L.LESSON_DATE >= SYSDATE     -- 강습일자가 현재날짜보다 이후일때
          AND L.LESSON_STAT = 'LS01'  -- 강습 상태가 신청가능일때
          AND L.LOGIN_ID = #{loginId} -- #{LOGIN_ID} 선택한 강사 아이디 가져와서
          AND L.LESSON_ID = #{lessonId}   -- #{LESSON_ID} 선택한 강의의 아이디가 일치하는지
    </insert>

    <!-- ========================================= -->
    <!-- 개인정보 화면에서 본인이 예약한 예약내역 보여주기 -->
    <!-- ========================================= -->
    <select id="reservationDetail">
        SELECT
            R.RESERVE_ID AS 예약번호,
            L.LESSON_ID AS 강습번호,
            T.NAME AS 강사이름,
            M.NAME AS 수강생이름,
            R.RESERVE_DATE AS 신청일,
            L.LESSON_DATE AS 강습일,
            C.STAT AS 강습상태,
            D.DIV AS 강습구분
        FROM
            RESERVATION R
                INNER JOIN LESSON L
                           ON R.LESSON_ID = L.LESSON_ID
                INNER JOIN TEACHER T
                           ON R.TEACHER_ID = T.ID
                INNER JOIN MEMBER M
                           ON R.STUDENT_ID = M.LOGIN_ID
                INNER JOIN SKI_RESORT S
                           ON T.RESORT_ID = S.RESORT_ID
                INNER JOIN (SELECT CODE, CODE_VALUE AS STAT FROM COMMON_CODE WHERE NO = '002') C
                           ON R.LESSON_CODE = C.CODE
                INNER JOIN (SELECT CODE, CODE_VALUE AS DIV FROM COMMON_CODE WHERE NO = '004') D
                           ON L.LESSON_DIV = D.CODE
        WHERE
            STUDENT_ID = #{studentId}     -- #{LOGIN_ID} 현재 로그인중인 ID
        -- CANCLE_STAT = 'N'을 하지 않은 이유는 예약자가 본인이 취소한 예약도 볼 수 있기 때문
    </select>

    <!-- =========== -->
    <!-- 예약 취소하기 -->
    <!-- =========== -->
    <update id="cancleReservation">
        UPDATE
            RESERVATION
        SET
            CANCLE_STAT = 'Y',
            CANCLE_DATE = SYSDATE
        WHERE
            RESERVE_ID = #{reserveId}  -- #{RESERVE_ID}
          AND CANCLE_STAT = 'N'
    </update>


</mapper>